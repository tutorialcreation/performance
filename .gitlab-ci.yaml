# # as well as the Ruby container and available within each.
stages:
    - test
    - build
  
  
  build:
    stage: build
    image:
      name: docker:latest
    services:
      - name: docker:dind
    variables:
      TEST_IMAGE: 192.168.1.249:5050/h.kiptoo/samar-insurance:$CI_COMMIT_REF_NAME
      RELEASE_IMAGE: 192.168.1.249:5050/h.kiptoo/samar-insurance:latest
    before_script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" 192.168.1.249:5050 --password-stdin
  
    script:
      - docker build --pull -t $TEST_IMAGE -f docker/Dockerfile .
      - docker push $TEST_IMAGE
    only:
      - develop
      - master
  
  test:
    stage: test
    image:
      name: python:3.7
  
    variables:
      LC_ALL: "C.UTF-8"
      LANG: "C.UTF-8"
      WORKON_HOME: .pipenv/venvs
      PIPENV_CACHE_DIR: .pipenv/pipcache
      POSTGRES_DB: "my_custom_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "example"
      DB_NAME: "my_custom_db"
      DB_USER: "postgres"
      DB_HOST: "db"
      DB_PASSWORD: "example"
      PGDATA: "/var/lib/postgresql/data"
      SECRET_KEY: "very-secret-key"
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --data-checksums"
  
    services:
      - name: postgres:12
        alias: db
  
    # Make sure gitlab-ci knows to always cache the .pipenv path
    cache:
      key: pipenv
      paths:
        - .pipenv
  
    before_script:
      - pip install pipenv
      - pip install --user pipenv
      - pipenv install
  
    script:
      - pipenv run coverage run --source=app manage.py test --verbosity=2
      - pipenv run coverage report -m
      - pipenv run coverage-badge
    coverage: "/TOTAL.+ ([0-9]{1,3}%)/"
    artifacts:
      reports:
        codequality: gl-code-quality-report.json
  